{"version":3,"sources":["addresses.js","rolodex.js","rolodexFull.js","App.js","serviceWorker.js","index.js"],"names":["addresses","firstName","lastName","addressLineOne","addressLineTwo","city","state","zipCode","country","officeURL","Rolodex","_this$props","this","props","contact","onClickFunction","react_default","a","createElement","className","onClick","Component","RolodexFull","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selectedIndex","_onNext","bind","assertThisInitialized","length","setState","prevState","currentRolodex","alt","src","width","App","setCurrentRolodex","changeCurrentRolodex","_this2","console","log","map","address","key","rolodex","rolodexFull","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a985165d.chunk.js","sourcesContent":["export const addresses = [\r\n\t\r\n\t{\r\n\t\tfirstName:'Michael',\r\n\t\tlastName:'Scott',\r\n\t\taddressLineOne:'345 Pine Ridge',\r\n\t\taddressLineTwo:'suite #9',\r\n\t\tcity:'Scranton',\r\n\t\tstate:'PA',\r\n\t\tzipCode:'32456',\r\n\t\tcountry:'USA',\r\n\t\tofficeURL:'https://vignette.wikia.nocookie.net/theoffice/images/9/96/Prisonmike.png/revision/latest/scale-to-width-down/350?cb=20100327171549'\r\n\t},\r\n\t{\r\n\t\tfirstName:'Jim',\r\n\t\tlastName:'Halpert',\r\n\t\taddressLineOne:'9999 Forest Ave',\r\n\t\taddressLineTwo:null,\r\n\t\tcity:'North Scranton',\r\n\t\tstate:'PA',\r\n\t\tzipCode:'33456',\r\n\t\tcountry:'USA',\r\n\t\tofficeURL:'https://vignette.wikia.nocookie.net/theoffice/images/3/3c/R05cmfb265121.jpg/revision/latest/scale-to-width-down/174?cb=20190206014014'\r\n\t},\r\n\t{\r\n\t\tfirstName:'Creed',\r\n\t\tlastName:'Bratton',\r\n\t\taddressLineOne:'street',\r\n\t\taddressLineTwo:'apartment',\r\n\t\tcity:'Yes',\r\n\t\tstate:'Here',\r\n\t\tzipCode:'what',\r\n\t\tcountry:'America. Or Canada.',\r\n\t\tofficeURL:'https://i.redd.it/4z3r92b8rly01.png'\r\n\t},\r\n\t{\r\n\t\tfirstName:'Pam',\r\n\t\tlastName:'Beesly',\r\n\t\taddressLineOne:'31 Cottage Way',\r\n\t\taddressLineTwo:'apartment #13',\r\n\t\tcity:'Scranton',\r\n\t\tstate:'PA',\r\n\t\tzipCode:'33456',\r\n\t\tcountry:'USA',\r\n\t\tofficeURL:'https://media.giphy.com/media/FqHvakENy6Oe4/giphy.gif'\r\n\t},\r\n\t{\r\n\t\tfirstName:'Dwight',\r\n\t\tlastName:'Schrute',\r\n\t\taddressLineOne:'123 Schrute Drive',\r\n\t\taddressLineTwo:null,\r\n\t\tcity:'Farmville',\r\n\t\tstate:'PA',\r\n\t\tzipCode:'34567',\r\n\t\tcountry:'USA',\r\n\t\tofficeURL:'https://i.etsystatic.com/17916587/r/il/888eb5/1793739028/il_794xN.1793739028_c069.jpg'\r\n\t},\r\n\t\r\n\t\r\n];","import React, { Component } from 'react';\r\n\r\nclass Rolodex extends Component{\r\n\trender(){\r\n\t\t\r\n\t\tconst{contact, onClickFunction} = this.props;\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<button className=\"preview-button\" onClick={() => onClickFunction(contact)}>\r\n\t\t\t\t<p>{contact.firstName}</p>\r\n\t\t\t\t<p>{contact.lastName}</p>\r\n\t\t\t\t<p>{contact.addressLineOne}</p>\r\n\t\t\t</button>\r\n\t\t)\t\r\n\t}\r\n}\r\n\r\nexport default Rolodex;\r\n","import React, {Component} from 'react';\r\n\r\nclass RolodexFull extends Component {\r\n\t\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\taddresses: [],\r\n\t\t\tselectedIndex: 0\r\n\t\t}\r\n\t\tthis._onNext = this._onNext.bind(this);\r\n\t}\r\n\t\r\n\t_onNext() {\r\n\t\tif (this.state.selectedIndex === this.state.addresses.length - 1)\r\n\t\t\treturn;\r\n\t\t\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tselectedIndex: prevState.selectedIndex + 1}))\r\n\t}\t\r\n\t\t\r\n\t\r\n\t\r\n    render() {\r\n        const {addresses, currentRolodex} = this.props;\r\n        return (\r\n            <div className=\"rolodexFull\">\r\n                <div>\r\n                    <img\r\n                        alt={currentRolodex.lastName}\r\n                        className=\"face\"\r\n                        src={currentRolodex.officeURL}\r\n                        width={300}\r\n                    />\r\n                </div> \r\n                <div className=\"rolo-info\">                   \r\n                    <p>First Name: {currentRolodex.firstName}</p>\r\n                    <p>Last Name: {currentRolodex.lastName}</p>\r\n                    <p>Address: {currentRolodex.addressLineOne}</p>\r\n\t\t\t\t\t<p>Address: {currentRolodex.addressLineTwo}</p>\r\n                    <p>City: {currentRolodex.city}</p>\r\n                    <p>State: {currentRolodex.state}/10</p>\r\n\t\t\t\t\t<p>Zip: {currentRolodex.zipCode}</p>\r\n\t\t\t\t\t<p>Country: {currentRolodex.country}</p>\r\n\t\t\t\t{//\t<button onClick={this._onNext}>Next</button>\r\n\t\t\t\t}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RolodexFull;\r\n","import React, {\r\n\tComponent\r\n} from 'react';\r\nimport {\r\n\taddresses\r\n} from './addresses';\r\nimport Rolodex from './rolodex';\r\nimport RolodexFull from './rolodexFull';\r\nimport './styles.css';\r\n\r\nclass App extends Component {\r\n\r\n\tsetCurrentRolodex = (contact) => {\r\n\t\tthis.setState({\r\n\t\t\tcurrentRolodex: contact\r\n\t\t})\r\n\t};\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.changeCurrentRolodex = this.setCurrentRolodex.bind(this);\r\n\r\n\t\tthis.state = {\r\n\r\n\t\t\tcurrentRolodex: null\r\n\r\n\t\t};\r\n\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconsole.log(this.state.currentRolodex);\r\n\r\n\t\treturn ( <\r\n\t\t\tdiv className = \"App\" >\r\n\t\t\t<\r\n\t\t\tdiv className = \"rolo-mini-col\" >\r\n\t\t\t<\r\n\t\t\tul > {\r\n\t\t\t\taddresses.map((address) => {\r\n\t\t\t\t\treturn ( <\r\n\t\t\t\t\t\tli key = {\r\n\t\t\t\t\t\t\taddress.firstName\r\n\t\t\t\t\t\t} >\r\n\t\t\t\t\t\t<\r\n\t\t\t\t\t\tRolodex contact = {\r\n\t\t\t\t\t\t\taddress\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonClickFunction = {\r\n\t\t\t\t\t\t\tthis.changeCurrentRolodex\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/> < /\r\n\t\t\t\t\t\tli >\r\n\r\n\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\r\n\t\t\t} < /ul> </div > {\r\n\t\t\t\t/* below is what map() is doing above... also block comments need curly braces because it's javascript!!!\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Rolodex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontact={addresses[0]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Rolodex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontact={addresses[1]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Rolodex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontact={addresses[2]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Rolodex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontact={addresses[3]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Rolodex\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontact={addresses[4]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t*/\r\n\t\t\t} <\r\n\t\t\tdiv className = \"rolo-full-contact\" > {\r\n\t\t\t\tthis.state.currentRolodex ?\r\n\r\n\t\t\t\t<\r\n\t\t\t\tRolodexFull\r\n\t\t\t\tcurrentRolodex = {\r\n\t\t\t\t\tthis.state.currentRolodex\r\n\t\t\t\t}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t:\r\n\r\n\t\t\t\t\t<\r\n\t\t\t\t\tdiv className = \"select-contact\" >\r\n\r\n\t\t\t\t\t<\r\n\t\t\t\t\tp > Welcome to the Dunderdex. < /p>  < /\r\n\t\t\t\t\tdiv >\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t\t<\r\n\t\t\t/div>   </div >\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}